1. 无参调用（复用最后一次调用时传入的参数） *
2. 高频次重复渲染性能 *
3. 同一画布可以展现多个子图
4. 调整子图的默认配置的代码书写形式，以简化子图共有的配置的识别难度 *
5. 明细查看、拖动功能抽取 *

----------------------------
1. 左右侧裁剪，保证关键配置的不同取值下的健壮性 *
2. 流畅移动 *
3. 封装拖动、翻转拖动 *
4. 尺寸改变自动重绘
5. 数据改变自动重绘 *
6. 位移改变自动重绘 *
7. 封装API，自动创建canvas *
   1) 应用提供容器，图形创建画布
   2) 绘制顺序与子图添加顺序一致
8. 蜡烛图允许与部分子图融合绘制 *

----------------------------
待办事项：
1. 2019.01.09 14:10 - 需将K线图形组件中的类封装抽取至外层
   * 2019.01.09 15:52 完成
2. 2019.01.09 15:53 - 需在K线图中实现走势图（均线以趋势图配置的形式绘制）
   * 2019.01.09 20:53 完成
3. 2019.01.09 14:15 - 需思考分时图的实现方式（按交易节，不受限于可绘制空间，将所有数据均绘制至界面上）
4. 2019.01.09 14:21 - 需修复故障：测试用例test7中，将图形向右拉至最左侧时，即使将鼠标的悬浮位置在图形正文的左侧，程序也会错误地绘制出一条数据明细查阅线条
   * 2019.01.09 16:07 完成
5. 2019.01.09 14:32 - gulpfile2.js需要更新
6. 2019.01.09 17:52 - 需修复故障：测试用例test6中，MA线左侧没有正确地延伸至数据左边界
   * 2019.01.14 17:40 - 完成
7. 2019.01.09 20:53 - 需修复故障：走势图拖动时的渲染表现不连贯
   - 2019.01.10 11:19 完成。受限于当前的裁剪思路，暂无法实现全连贯拖动